apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
    name: docs-template-pr
    title: Add existing technical documentation to DevHub
    description: Add the required files to an existing repo to publish on DevHub
    tags:
        - techdocs
        - markdown
        - developer-experience
        - core
spec:
    owner: "developer-experience"
    type: documentation
    parameters:
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/catalog-info-component-parameters.yaml
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/pubcode-parameters.yaml
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/pubcode-parameters-platform.yaml
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/license-parameters.yaml
        -   title: Specify repository details
            required:
                - repoUrl
                - targetBranchName
                - docsPath
                - owner
            properties:
                repoUrl:
                    title: Specify details for creating a new repository or a pull request to an existing repo
                    type: string
                    ui:field: RepoUrlPicker
                    ui:options:
                        requestUserCredentials: # this is super important - it causes the user to be prompted to log in to GitHub and/or authorize the required GH scopes.
                            secretsKey: USER_OAUTH_TOKEN
                            additionalScopes:
                                github:
                                    - workflow
                        allowedHosts:
                            - github.com
                        allowedOwners:
                            - bcgov
                targetBranchName:
                    title: Target branch name
                    type: string
                    description: The target branch name of the merge request
                    default: main
                docsPath:
                    title: Documentation subdirectory
                    type: string
                    pattern: '^(?!\/.*$).*' # no leading '/'s
                    description: The path to an existing documentation subdirectory. For example, "docs/src".
                    default: docs
                owner:
                    title: GitHub team
                    type: string
                    description: The team in GitHub that is developing the documentation.
                    ui:field: OwnerPicker
                    ui:options:
                        allowArbitraryValues: false
                        catalogFilter:
                            - kind: [ Group ]
                              metadata.namespace: bcgov
    steps:
        -   id: fetch-base
            name: Add files from skeleton and apply user-provided values.
            action: fetch:template
            input:
                url: ../../shared/techdocs-skeleton
                values:
                    name: ${{ parameters.title | lower | replace(" ", "-") | replace("'", "") }}
                    title: ${{ parameters.title }}
                    description: ${{ parameters.description }}
                    destination: ${{ parameters.repoUrl | parseRepoUrl }}
                    repo_url: ${{ parameters.repoUrl | parseRepoUrl }}
                    owner: ${{ parameters.owner }}
                    ministry: ${{ parameters.ministry }}
                    product_name: ${{ parameters.product_name }}
                    product_acronym: ${{ parameters.product_acronym }}
                    product_owner: ${{ parameters.product_owner }}
                    product_owner_email: ${{ parameters.product_owner_email }}
                    docs_path: ${{ parameters.docsPath }}
                    target_branch: ${{ parameters.targetBranchName }}
        -   id: rename-files
            name: Rename docs folder to repo subdir if necessary
            if: ${{ parameters.docsPath !== 'docs' and parameters.docsPath !== 'docs/' }}
            action: fs:rename
            input:
                files:
                    -   from: "docs/index.md"
                        to: "${{ parameters.docsPath }}/index.md"
                    -   from: "docs/about-us.md"
                        to: "${{ parameters.docsPath }}/about-us.md"
                    -   from: "docs/configuration.md"
                        to: "${{ parameters.docsPath }}/configuration.md"
                    -   from: "docs/getting-started.md"
                        to: "${{ parameters.docsPath }}/getting-started.md"
                    -   from: "docs/tips-and-tricks.md"
                        to: "${{ parameters.docsPath }}/tips-and-tricks.md"
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/license-action.yaml
        -   id: rename-readme
            name: Rename README.md for Pull Request
            action: fs:rename
            input:
                files:
                    -   from: README.md
                        to: README_TECHDOCS.md
        -   id: delete-files
            name: Remove excluded files
            action: fs:delete
            input:
                files:
                    - ".gitignore"
                    - CODE_OF_CONDUCT.md
                    - CONTRIBUTING.md
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/catalog-info-component-action.yaml
        -   id: fetch-action
            name: Add GitHub Actions workflow files.
            action: fetch:template
            input:
                url: ../../shared/.github # pull from a shared location. The workflow lives in this location so we can reuse it access multiple templates instead of cutting and pasting it.
                targetPath: ./.github
                values:
                    docs_path: ${{ parameters.docsPath }}
                    target_branch: ${{ parameters.targetBranchName }}
        -   id: publish
            name: Publish
            action: publish:github:pull-request
            input:
                repoUrl: ${{ parameters.repoUrl }}
                title: "DevHub publishing pull request"
                branchName: "DevHub-publishing-pr-branch"
                description: "This pull request will add the files required to publish documentation on DevHub"
                token: ${{ secrets.USER_OAUTH_TOKEN }} # this causes the GitHub publish to be performed as the logged-in user and reduces the required permissions of the app itself.
                targetBranchName: ${{ parameters.targetBranchName }}
                commitMessage: "DevHub creating new files for TechDocs."
                update: true
    output:
        links:
            -   title: New Pull Request
                url: ${{ steps.publish.output.remoteUrl }}
        text:
            -   title: Congratulations and next steps...
                content: |
                    **Congratulations, you've made a new pull request to add DevHub publishing for your technical documentation!**

                    ## Here are the next steps you can take to get your documentation published in DevHub:

                    * check out the contents of [your new pr](${{ steps.publish.output.remoteUrl }}) especially the [README and index.md files](${{ steps.publish.output.remoteUrl }}/files)
                    * check out [our Content Partner Guide](https://developer.gov.bc.ca) for info on "how this all works" and for creating your documentation
                    * add your pages to the mkdocs.yml file

                    When you'd like to have your documentation published in DevHub, [contact the Developer Experience Team](mailto:developer.experience@gov.bc.ca) and we'll work with you to set things up. Note that we have a "preview" environment and a production environment, and you'll be in control of how and when your content is published to each.
