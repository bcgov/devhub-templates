apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
    name: docs-template-pr
    title: Add existing technical documentation to DevHub
    description: Add the required files to an existing repo to publish on DevHub
    tags:
        - techdocs
        - markdown
        - developer-experience
        - core
spec:
    owner: "developer-experience"
    type: documentation
    parameters:
        -   title: Provide information about your documentation
            required:
                - title
                - description
            properties:
                title:
                    title: Title
                    type: string
                    description: A title for your documentation. For example, "Whizzbang Service Developer's Guide".
                    ui:autofocus: true
                description:
                    title: Description
                    type: string
                    description: A description for your documentation
                owner:
                    title: GitHub team (optional)
                    type: string
                    description: The team in GitHub that is developing the documentation, if there is one.
                    ui:field: OwnerPicker
                    ui:options:
                        allowArbitraryValues: false
                        catalogFilter:
                            - kind: [ Group ]
                              metadata.namespace: bcgov
        -   title: Provide information about your product (or service/component)
            properties:
                ministry:
                    title: Ministry (optional)
                    type: string
                    description: Name of the ministry associated with the product
                    enum:
                        - AF
                        - AG
                        - MCF
                        - CITZ
                        - ECC
                        - EMCR
                        - EMLI
                        - ENV
                        - FIN
                        - FOR
                        - HLTH
                        - HOUS
                        - IRR
                        - JEDI
                        - LBR
                        - MMHA
                        - MUNI
                        - PSFS
                        - PSSG
                        - SDPR
                        - TACS
                        - TRAN
                        - WLRS
                    enumNames:
                        - "Agriculture and Food"
                        - "Attorney General"
                        - "Children and Family Development"
                        - "Citizens' Services"
                        - "Education and Child Care"
                        - "Emergency Management and Climate Readiness"
                        - "Energy, Mines and Low Carbon Innovation"
                        - "Environment and Climate Change Strategy"
                        - "Finance"
                        - "Forests"
                        - "Health"
                        - "Housing"
                        - "Indigenous Relations & Reconciliation"
                        - "Jobs, Economic Development and Innovation"
                        - "Labour"
                        - "Mental Health and Addictions"
                        - "Municipal Affairs"
                        - "Post-Secondary Education and Future Skills"
                        - "Public Safety and Solicitor General"
                        - "Social Development and Poverty Reduction"
                        - "Tourism, Arts, Culture and Sport"
                        - "Transportation and Infrastructure"
                        - "Water, Land and Resource Stewardship"
                product_name:
                    title: Product name (optional)
                    type: string
                    description: The name of the product
                product_acronym:
                    title: Product acronym (optional)
                    type: string
                    description: An acronym used to identity the product, if there is one
                product_owner:
                    title: Product owner (optional)
                    type: string
                    description: Name of the individual in the Product Owner role for the product
                product_owner_email:
                    title: Product owner email (optional)
                    type: string
                    description: Email address of the individual in the Product Owner role for the product
                hosting_platform:
                    title: Hosting platform (optional)
                    type: string
                    description: Name of the technical platform where the product is hosted
                    default: Private-Cloud-Openshift
                    enum:
                        - Amazon-Web-Services
                        - Google-Cloud-Platform
                        - Microsoft-Azure
                        - On-Premise-Physical
                        - On-Premise-Virtual
                        - Private-Cloud-Openshift
                        - Other
                        - Unknown
                        - Not-Applicable
                    enumNames:
                        - 'Amazon Web Service'
                        - 'Google Cloud Platform'
                        - 'Microsoft Azure'
                        - 'On-premise virtual infrastructure'
                        - 'On-premise physical infrastructure'
                        - 'OpenShift private cloud'
                        - "Other platform that isn't listed"
                        - "Not sure"
                        - "Not applicable"
        -   title: Select a license for your repository
            required:
                - licenseType
            properties:
                licenseType:
                    title: The repository license for your documentation
                    type: string
                    description: |
                        Select a license for your technical documentation

                        [Visit the BC Developer Guide](https://developer.gov.bc.ca/docs/default/component/bc-developer-guide/use-github-in-bcgov/license-your-github-repository/#preferred-licenses)
                        to read more about licensing your repository
                    default: CreativeCommons
                    enum:
                        - None
                        - CreativeCommons
                        - Apache2
                    enumNames:
                        - 'None'
                        - 'Creative Commons'
                        - 'Apache 2'
            dependencies:
                licenseType:
                    allOf:
                        - if:
                            properties:
                                licenseType:
                                    const: CreativeCommons
                          then:
                            properties:
                                licenseType:
                                    description: |
                                        Select a license for your technical documentation

                                        **Creative Commons** - Recommended for documentation, artistic resources and educational material

                                        [Visit the BC Developer Guide](https://developer.gov.bc.ca/docs/default/component/bc-developer-guide/use-github-in-bcgov/license-your-github-repository/#preferred-licenses)
                                        to read more about licensing your repository
                        - if:
                            properties:
                                licenseType:
                                    const: Apache2
                          then:
                            properties:
                                licenseType:
                                    description: |
                                        Select a license for your technical documentation

                                        **Apache 2** - Recommended for code

                                        [Visit the BC Developer Guide](https://developer.gov.bc.ca/docs/default/component/bc-developer-guide/use-github-in-bcgov/license-your-github-repository/#preferred-licenses)
                                        to read more about licensing your repository
        -   title: Specify repository details
            required:
                - repoUrl
                - targetBranchName
                - docsPath
            properties:
                repoUrl:
                    title: Specify details for creating a new repository or a pull request to an existing repo
                    type: string
                    ui:field: RepoUrlPicker
                    ui:options:
                        requestUserCredentials: # this is super important - it causes the user to be prompted to log in to GitHub and/or authorize the required GH scopes.
                            secretsKey: USER_OAUTH_TOKEN
                            additionalScopes:
                                github:
                                    - workflow
                        allowedHosts:
                            - github.com
                        allowedOwners:
                            - bcgov
                targetBranchName:
                    title: Target branch name
                    type: string
                    description: The target branch name of the merge request
                    default: main
                docsPath:
                    title: Documentation subdirectory
                    type: string
                    pattern: '^(?!\/.*$).*' # no leading '/'s
                    description: The path to an existing documentation subdirectory. For example, "docs/src".
                    default: docs
    steps:
        -   id: fetch-base
            name: Add files from skeleton and apply user-provided values.
            action: fetch:template
            input:
                url: ../../shared/techdocs-skeleton
                values:
                    name: ${{ parameters.title | lower | replace(" ", "-") | replace("'", "") }}
                    title: ${{ parameters.title }}
                    description: ${{ parameters.description }}
                    destination: ${{ parameters.repoUrl | parseRepoUrl }}
                    repo_url: ${{ parameters.repoUrl | parseRepoUrl }}
                    owner: ${{ parameters.owner }}
                    ministry: ${{ parameters.ministry }}
                    product_name: ${{ parameters.product_name }}
                    product_acronym: ${{ parameters.product_acronym }}
                    product_owner: ${{ parameters.product_owner }}
                    product_owner_email: ${{ parameters.product_owner_email }}
                    docs_path: ${{ parameters.docsPath }}
                    target_branch: ${{ parameters.targetBranchName }}
        -   id: rename-files
            name: Rename docs folder to repo subdir if necessary
            if: ${{ parameters.docsPath !== 'docs' and parameters.docsPath !== 'docs/' }}
            action: fs:rename
            input:
                files:
                    -   from: "docs/index.md"
                        to: "${{ parameters.docsPath }}/index.md"
                    -   from: "docs/about-us.md"
                        to: "${{ parameters.docsPath }}/about-us.md"
                    -   from: "docs/configuration.md"
                        to: "${{ parameters.docsPath }}/configuration.md"
                    -   from: "docs/getting-started.md"
                        to: "${{ parameters.docsPath }}/getting-started.md"
                    -   from: "docs/tips-and-tricks.md"
                        to: "${{ parameters.docsPath }}/tips-and-tricks.md"
        -   id: add-license
            name: Add license file.
            if: ${{ parameters.licenseType !== 'None' }}
            action: fetch:plain:file
            input:
                url: ../../shared/licenses/${{ parameters.licenseType }}/LICENSE
                targetPath: ./LICENSE_CONTENT
        -   id: rename-readme
            name: Rename README.md for Pull Request
            action: fs:rename
            input:
                files:
                    -   from: README.md
                        to: README_TECHDOCS.md
        -   id: delete-files
            name: Remove excluded files
            action: fs:delete
            input:
                files:
                    - ".gitignore"
                    - CODE_OF_CONDUCT.md
                    - CONTRIBUTING.md
        -   id: create-catalog-file
            name: Create catalog file.
            action: catalog:write
            input:
                entity:
                    apiVersion: backstage.io/v1alpha1
                    kind: Component
                    metadata:
                        name: ${{ parameters.title | lower | replace(" ", "-") | replace("'", "") }}
                        title: ${{ parameters.title }}
                        description: ${{parameters.description }}
                        annotations:
                            github.com/project-slug: ${{ parameters.repoUrl | projectSlug }}
                            backstage.io/techdocs-ref: dir:.
                            bcgovpubcode.gov.bc.ca/ministry: ${{ parameters.ministry }}
                            bcgovpubcode.gov.bc.ca/product_name: ${{ parameters.product_name }}
                            bcgovpubcode.gov.bc.ca/product_acronym: ${{ parameters.product_acronym }}
                            bcgovpubcode.gov.bc.ca/product_owner: ${{ parameters.product_owner }}
                            developer.gov.bc.ca/source_template: "default/docs-template-pr"
                    spec:
                        type: documentation
                        lifecycle: experimental
                        owner: ${{ parameters.owner | default("developer-experience", true) }}
        -   id: fetch-action
            name: Add GitHub Actions workflow files.
            action: fetch:template
            input:
                url: ../../shared/.github # pull from a shared location. The workflow lives in this location so we can reuse it access multiple templates instead of cutting and pasting it.
                targetPath: ./.github
                values:
                    docs_path: ${{ parameters.docsPath }}
                    target_branch: ${{ parameters.targetBranchName }}
        -   id: pubcode
            name: Template Pubcode
            action: fetch:template
            input:
                url: ../../shared/pubcode
                values:
                    name: ${{ parameters.product_name }}
                    description: ${{ parameters.description }}
                    destination: ${{ parameters.repoUrl | parseRepoUrl }}
                    ministry: ${{ parameters.ministry }}
                    product_name: ${{ parameters.product_name }}
                    product_acronym: ${{ parameters.product_acronym }}
                    product_owner: ${{ parameters.product_owner }}
                    hosting_platform: ${{ parameters.hosting_platform }}
        -   id: publish
            name: Publish
            action: publish:github:pull-request
            input:
                repoUrl: ${{ parameters.repoUrl }}
                title: "DevHub publishing pull request"
                branchName: "DevHub-publishing-pr-branch"
                description: "This pull request will add the files required to publish documentation on DevHub"
                token: ${{ secrets.USER_OAUTH_TOKEN }} # this causes the GitHub publish to be performed as the logged-in user and reduces the required permissions of the app itself.
                targetBranchName: ${{ parameters.targetBranchName }}
                commitMessage: "DevHub creating new files for TechDocs."
                update: true
    output:
        links:
            -   title: New Pull Request
                url: ${{ steps.publish.output.remoteUrl }}
        text:
            -   title: Congratulations and next steps...
                content: |
                    **Congratulations, you've made a new pull request to add DevHub publishing for your technical documentation!**

                    ## Here are the next steps you can take to get your documentation published in DevHub:

                    * check out the contents of [your new pr](${{ steps.publish.output.remoteUrl }}) especially the [README and index.md files](${{ steps.publish.output.remoteUrl }}/files)
                    * check out [our Content Partner Guide](https://developer.gov.bc.ca) for info on "how this all works" and for creating your documentation
                    * add your pages to the mkdocs.yml file

                    When you'd like to have your documentation published in DevHub, [contact the Developer Experience Team](mailto:developer.experience@gov.bc.ca) and we'll work with you to set things up. Note that we have a "preview" environment and a production environment, and you'll be in control of how and when your content is published to each.
