apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
    name: openshift-quickstart
    title: OpenShift Quickstart
    description: A template to help BC Gov teams get started quickly building open source apps for deployoment on OpenShift.
spec:
    owner: developer-experience
    type: website

    # These parameters are used to generate the input form in the frontend, and are
    # used to gather input data for the execution of the template.
    parameters:
        -   title: Basic information about your product (app/service/component)
            required:
                - product_name
            properties:
                product_name:
                    title: Product/app name
                    type: string
                    description: The name of your app or product
                product_acronym:
                    title: Product acronym (optional)
                    type: string
                    description: An acronym used to identity the product, if there is one
                ministry:
                    title: Ministry (optional)
                    type: string
                    description: Name of the ministry associated with the product
                    enum:
                        - AF
                        - AG
                        - MCF
                        - CITZ
                        - ECC
                        - EMCR
                        - EMLI
                        - ENV
                        - FIN
                        - FOR
                        - HLTH
                        - HOUS
                        - IRR
                        - JEDI
                        - LBR
                        - MMHA
                        - MUNI
                        - PSFS
                        - PSSG
                        - SDPR
                        - TACS
                        - TRAN
                        - WLRS
                    enumNames:
                        - "Agriculture and Food"
                        - "Attorney General"
                        - "Children and Family Development"
                        - "Citizens' Services"
                        - "Education and Child Care"
                        - "Emergency Management and Climate Readiness"
                        - "Energy, Mines and Low Carbon Innovation"
                        - "Environment and Climate Change Strategy"
                        - "Finance"
                        - "Forests"
                        - "Health"
                        - "Housing"
                        - "Indigenous Relations & Reconciliation"
                        - "Jobs, Economic Development and Innovation"
                        - "Labour"
                        - "Mental Health and Addictions"
                        - "Municipal Affairs"
                        - "Post-Secondary Education and Future Skills"
                        - "Public Safety and Solicitor General"
                        - "Social Development and Poverty Reduction"
                        - "Tourism, Arts, Culture and Sport"
                        - "Transportation and Infrastructure"
                        - "Water, Land and Resource Stewardship"
                product_owner:
                    title: Product owner (optional)
                    type: string
                    description: Name of the individual in the Product Owner role for the product
                product_owner_email:
                    title: Product owner email (optional)
                    type: string
                    description: Email address of the individual in the Product Owner role for the product
                hosting_platform:
                    title: Hosting platform (optional)
                    type: string
                    description: Name of the technical platform where the product is hosted
                    default: Private-Cloud-Openshift
                    enum:
                        - Amazon-Web-Services
                        - Google-Cloud-Platform
                        - Microsoft-Azure
                        - On-Premise-Physical
                        - On-Premise-Virtual
                        - Private-Cloud-Openshift
                        - Other
                        - Unknown
                        - Not-Applicable
                    enumNames:
                        - 'Amazon Web Service'
                        - 'Google Cloud Platform'
                        - 'Microsoft Azure'
                        - 'On-premise virtual infrastructure'
                        - 'On-premise physical infrastructure'
                        - 'OpenShift private cloud'
                        - "Other platform that isn't listed"
                        - "Not sure"
                        - "Not applicable"
                backend_tech_stack:
                    title: Backend Technology Stack
                    type: string
                    description: The technology stack that you'll be using for the backend of your app.
                    default: backend-py
                    enum:
                        - backend-py
                        - backend-go
                        - backend-java
                    enumNames:
                        - "Python with FastAPI"
                        - "Go with Fiber"
                        - "Java with Quarkus"
        -   title: Specify repository details
            required:
                - repoUrl
            properties:
                repoUrl:
                    title: Name of the repository that we will create to store your app's code
                    type: string
                    ui:field: RepoUrlPicker
                    ui:options:
                        requestUserCredentials: # this is super important - it causes the user to be prompted to log in to GitHub and/or authorize the required GH scopes.
                            secretsKey: USER_OAUTH_TOKEN
                            additionalScopes:
                                github:
                                    - workflow
                        allowedHosts:
                            - github.com
                        allowedOwners:
                            - bcgov

    steps:
        -   id: fetch-quickstart-part-1
            name: Add files from skeleton and apply user-provided values.
            action: fetch:plain
            input:
                url: https://github.com/bcgov/quickstart-openshift
        #                values:
        #                    name: ${{ parameters.product_name | lower | replace(" ", "-") | replace("'", "") }}
        #                    title: ${{ parameters.product_name }}
        #                    description: ${{ parameters.description }}
        #                    destination: ${{ parameters.repoUrl | parseRepoUrl }}
        #                    repo_url: ${{ parameters.repoUrl | parseRepoUrl }}
        #                    owner: ${{ parameters.owner }}
        #                    ministry: ${{ parameters.ministry }}
        #                    product_name: ${{ parameters.product_name }}
        #                    product_acronym: ${{ parameters.product_acronym }}
        #                    product_owner: ${{ parameters.product_owner }}
        #                    product_owner_email: ${{ parameters.product_owner_email }}
        #                    docs_path: 'docs'
        #                    target_branch: 'main'
        -   id: fetch-quickstart-part-2
            name: Add files from skeleton and apply user-provided values.
            action: fetch:template
            input:
                url: https://github.com/bcgov/quickstart-openshift-backends/tree/main/backend-py
                targetPath: backend
                replace: true
                values:
                    name: ${{ parameters.product_name | lower | replace(" ", "-") | replace("'", "") }}
                    title: ${{ parameters.product_name }}
                    description: ${{ parameters.description }}
                    destination: ${{ parameters.repoUrl | parseRepoUrl }}
                    repo_url: ${{ parameters.repoUrl | parseRepoUrl }}
                    owner: ${{ parameters.owner }}
                    ministry: ${{ parameters.ministry }}
                    product_name: ${{ parameters.product_name }}
                    product_acronym: ${{ parameters.product_acronym }}
                    product_owner: ${{ parameters.product_owner }}
                    product_owner_email: ${{ parameters.product_owner_email }}
                    docs_path: 'docs'
                    target_branch: 'main'
        -   id: create-catalog-file
            name: Create catalog file.
            action: catalog:write
            input:
                entity:
                    apiVersion: backstage.io/v1alpha1
                    kind: Component
                    metadata:
                        name: ${{ parameters.product_name | lower | replace(" ", "-") | replace("'", "") }}
                        title: ${{ parameters.product_name }}
                        description: ${{parameters.description }}
                        annotations:
                            github.com/project-slug: ${{ parameters.repoUrl | projectSlug }}
                            backstage.io/techdocs-ref: dir:.
                            bcgovpubcode.gov.bc.ca/ministry: ${{ parameters.ministry }}
                            bcgovpubcode.gov.bc.ca/product_name: ${{ parameters.product_name }}
                            bcgovpubcode.gov.bc.ca/product_acronym: ${{ parameters.product_acronym }}
                            bcgovpubcode.gov.bc.ca/product_owner: ${{ parameters.product_owner }}
                            developer.gov.bc.ca/source_template: "default/docs-template"
                    spec:
                        type: documentation
                        lifecycle: experimental
                        owner: ${{ parameters.owner | default("developer-experience", true) }}
        -   id: pubcode
            name: Template Pubcode
            action: fetch:template
            input:
                url: https://github.com/bcgov/devhub-templates/blob/main/shared/pubcode
                targetPath: .
                replace: true
                values:
                    name: ${{ parameters.product_name }}
                    description: ${{ parameters.description }}
                    destination: ${{ parameters.repoUrl | parseRepoUrl }}
                    ministry: ${{ parameters.ministry }}
                    product_name: ${{ parameters.product_name }}
                    product_acronym: ${{ parameters.product_acronym }}
                    product_owner: ${{ parameters.product_owner }}
                    hosting_platform: ${{ parameters.hosting_platform }}
        -   id: publish
            name: Publish
            action: publish:github
            input:
                allowedHosts: [ "github.com" ]
                description: This is ${{ parameters.product_name }}
                repoUrl: ${{ parameters.repoUrl }}
                token: ${{ secrets.USER_OAUTH_TOKEN }} # this causes the GitHub publish to be performed as the logged-in user and reduces the required permissions of the app itself.
                repoVisibility: "public"
                defaultBranch: "main"
                gitCommitMessage: "DevHub creating new repository for TechDocs."
                gitAuthorName: ${{ user.entity.metadata.product_name }} # this likely won't populate properly we do some additional work on sign in to improve the default behaviour.
                gitAuthorEmail: ${{ user.entity.spec.profile.email }} # this likely won't work  populate properly until we do some additional work on sign in to improve the default behaviour.
                hasProjects: false
                hasWiki: false
                topics: [ "techdocs", "devhub" ]

    output:
        links:
            -   title: Repository
                url: ${{ steps.publish.output.remoteUrl }}
        text:
            -   title: Congratulations and next steps...
                content: |
                    **Congratulations, you've made a new GitHub repository for your app!**

                    You can now build your app using GitHub Actions and deploy it to OpenShift with a few steps.


