apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
    name: docs-template
    title: Create a technical documentation repo
    description: Create a new repo for techdocs with required files to publish on DevHub
    tags:
        - techdocs
        - markdown
        - developer-experience
        - core
spec:
    owner: "developer-experience"
    type: documentation
    parameters:
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/catalog-info-component-parameters.yaml
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/pubcode-parameters.yaml
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/pubcode-parameters-platform.yaml
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/license-parameters.yaml
        -   title: Specify repository details
            required:
                - repo
                - owner
            properties:
                repo:
                    title: Name of the repository that we will create to store your documentation
                    type: string
                    ui:field: RepoUrlPicker
                    ui:options:
                        requestUserCredentials: # this is super important - it causes the user to be prompted to log in to GitHub and/or authorize the required GH scopes.
                            secretsKey: USER_OAUTH_TOKEN
                            additionalScopes:
                                github:
                                    - workflow
                        allowedHosts:
                            - github.com
                        allowedOwners:
                            - bcgov
                owner:
                    title: GitHub team
                    type: string
                    description: The team in GitHub that is developing the documentation
                    ui:field: OwnerPicker
                    ui:options:
                        allowArbitraryValues: false
                        catalogFilter:
                            - kind: [ Group ]
                              metadata.namespace: bcgov
    steps:
        -   id: fetch-base
            name: Add files from skeleton and apply user-provided values.
            action: fetch:template
            input:
                url: ../../shared/techdocs-skeleton
                values:
                    name: ${{ parameters.title | lower | replace(" ", "-") | replace("'", "") }}
                    title: ${{ parameters.title }}
                    description: ${{ parameters.description }}
                    destination: ${{ parameters.repo | parseRepoUrl }}
                    repo_url: ${{ parameters.repo | parseRepoUrl }}
                    owner: ${{ parameters.owner }}
                    ministry: ${{ parameters.ministry }}
                    product_name: ${{ parameters.product_name }}
                    product_acronym: ${{ parameters.product_acronym }}
                    product_owner: ${{ parameters.product_owner }}
                    product_owner_email: ${{ parameters.product_owner_email }}
                    docs_path: 'docs'
                    target_branch: 'main'
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/license-action.yaml
        -   $yaml: https://github.com/bcgov/devhub-templates/blob/main/shared/common-yaml/catalog-info-component-action.yaml
        -   id: fetch-action
            name: Add GitHub Actions workflow files.
            action: fetch:template
            input:
                url: ../../shared/.github # pull from a shared location. The workflow lives in this location so we can reuse it access multiple templates instead of cutting and pasting it.
                targetPath: ./.github
                values:
                    docs_path: 'docs'
                    target_branch: 'main'
        -   id: publish
            name: Publish
            action: publish:github
            input:
                allowedHosts: [ "github.com" ]
                description: ${{ parameters.description }}
                repoUrl: ${{ parameters.repo }}
                token: ${{ secrets.USER_OAUTH_TOKEN }} # this causes the GitHub publish to be performed as the logged-in user and reduces the required permissions of the app itself.
                repoVisibility: "public"
                defaultBranch: "main"
                gitCommitMessage: "DevHub creating new repository for TechDocs."
                gitAuthorName: ${{ user.entity.metadata.name }} # this likely won't populate properly we do some additional work on sign in to improve the default behaviour.
                gitAuthorEmail: ${{ user.entity.spec.profile.email }} # this likely won't work  populate properly until we do some additional work on sign in to improve the default behaviour.
                hasProjects: false
                hasWiki: false
                topics: [ "techdocs", "devhub" ]
                collaborators:
                    -   team: ${{ parameters.owner if parameters.owner }}
                        access: ${{ 'admin' if parameters.owner }}
    output:
        links:
            -   title: Repository
                url: ${{ steps.publish.output.remoteUrl }}
        text:
            -   title: Congratulations and next steps...
                content: |
                    **Congratulations, you've made a new GitHub repository for your technical documentation!**

                    ## Here are the next steps you can take to get your documentation published in DevHub:

                    * check out the contents of [your new repo](${{ steps.publish.output.remoteUrl }}) especially the [README file](${{ steps.publish.output.remoteUrl | replace(".git", "") }}/blob/main/README.md) and the [example home page](${{ steps.publish.output.remoteUrl | replace(".git", "") }}/blob/main/docs/index.md)
                    * check out [our Content Partner Guide](https://developer.gov.bc.ca) for info on "how this all works" and for creating your documentation
                    * add your additional pages to the repository

                    When you'd like to have your documentation published in DevHub, [contact the Developer Experience Team](mailto:developer.experience@gov.bc.ca) and we'll work with you to set things up. Note that we have a "preview" environment and a production environment, and you'll be in control of how and when your content is published to each.

